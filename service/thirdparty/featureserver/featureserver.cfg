# Metadata section allows you to define the default
# service type to be created, and location for error logging

[metadata]
default_service=WFS
# define a service that is able to return a excpetion report. If it is not set, then FeatureServer would try to return the exception report in the format of the requested service. If that is not possible it takes the default serivce if it is able and WFS otherwise.
#default_exception=WFS
#error_log=error.log




# each additional section is a 'layer', which can be accessed.
# see DataSources.txt for more info on configuring.

[fs_spatiallite]
type=SpatialLite
file=/home/featureserver/pois.sqlite
layer=featureserver
fe_attributes=true
fid=fid
srid=4326
srid_out=4326


[fs_twitter]
type=Twitter
consumer_key=
consumer_secret=
token_key=
token_secret=
screen_name=eFeatureServer
attributes=user.name,source


[fs_flickr]
type=Flickr
api_key=
api_secret=
user_id=89665068@N04
attributes=title,description


[fs_postgis]
type=PostGIS
title=Point-of-Interests from OpenStreetMap
abstract=Point-of-Interests (POIs) from OpenStreetMap. (Hstore example)
dsn=host=localhost dbname=gis_db user=gisuser password=gisuser port=5432
layer=osm_point
fid=osm_id
geometry=way
version=osm_version
fe_attributes=true
srid=900913
srid_out=4326
hstore=true
hstore_attr=tags
ele=hstore(tags)->'ele'
attribute_cols=name, gtype as "geometry_type", hstore(tags)->'operator' as "operator", hstore(tags)->'highway' as "highway", hstore(tags)->'amenity' as "amenity", hstore(tags)->'historic' as "historic", hstore(tags)->'natural' as "natural", hstore(tags)->'url' as "url", hstore(tags)->'contact:website' as "contact_website", hstore(tags)->'website' as "website", hstore(tags)->'wikipedia' as "wikipedia", hstore(tags)->'wikipedia:en' as "wikipedia_en", hstore(tags)->'wikipedia:de' as "wikipedia_de", hstore(tags)->'addr:street' as "street", hstore(tags)->'addr:housenumber' as "housenumber", hstore(tags)->'addr:postcode' as "postcode", hstore(tags)->'addr:city' as "city", hstore(tags)->'phone' as "phone", hstore(tags)->'tourism' as "tourism", hstore(tags)->'shop' as "shop", hstore(tags)->'opening_hours' as "opening_hours", hstore(tags)->'bicycle_parking' as "bicycle_parking", hstore(tags)->'railway' as "railway", hstore(tags)->'aeroway' as "aeroway", hstore(tags)->'leisure' as "leisure", hstore(tags)->'species' as "species", hstore(tags)->'surface' as "surface" 
additional_cols=round(ST_Area2d(ST_Transform(the_geog, 21781))) as sqm
#<minx> <miny> <maxx> <maxy>
bbox=5.95459 45.75986 10.52490 47.83528
# Possible values: Point, LineString, Polygon
geometry_type=Point


[fs_geoalchemy]
type=GeoAlchemy
model=tests.geoalchemy_model
dburi=postgres://michel@localhost/featureserver
cls=Road
fid=id
geometry=geom

